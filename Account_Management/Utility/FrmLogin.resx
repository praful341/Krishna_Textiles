<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABIVJREFUWEelV9lLXGccvfMftAl0SQvuMY1LwN0ZHbcnfa3WtaC2+KI+ZPTFJWAK
        PoRS0SEKij6ENgsuo+mTgtsoiKSuuEwCMaTFNfbVJI0xyTmTe+V6891l7MAZZu79feec7/f9vk3a3d01
        xP7+vrS9vW2bnZ293NbWVlVRUXHH6XSuxsTEHISHh78koqOjD/msvLz8946Ojp/n5ubC2Obg4EDIqYbw
        IbG3tyft7OzYJicno+vq6m6lpqY+gdib4ODg9yEhIX6Ehob6ofznO8T8Z7fbfS6X69fx8fFr5CCXSIMQ
        PmSv19fXLzY3N9+Ij49/rogqgmZgfFBQ0Pu4uLh/buCztrZ2kZwirU8eMHB6evpqfn7+nxA9CURYCzkz
        J+B6CM7vRCbO/GHA6OhofHZ29l/sgR4ph4KptmqOXOQEd5x2OM6Iz8zMXEbgIz1xpha1sNnd3V3c09NT
        hLHe4DNRrBbkzMnJeUQNdSb8X3S1ubn5WWFh4bCZ+PDwcBqrmxgZGYEH+3ogJqDhoZaSCcWJrbW11YWg
        Y20jgqlOTEzcGhoaSle75+9ATQDH0LpOTXL4Sbxe75WkpKRnemNK59XV1Z2i6SSbcCA7loaDGtTCUFxh
        W5LYGhoafjFqzHe5ubnTCwsLX6szoDaBobFsgjHUpLYE0m8zMjJWzRrC+QnG78HS0tJXeiY8Hk8a68SM
        i+8zMzNXqS319vb+EBkZ+VIUqAUavisqKroPE18amEhPSUkxNUFNaksY29tmwWpYMcFihQmfES/f1dTU
        3Jby8vJmAjFA0ERxcfG95eXlL0QmWKww4TQywefQ9kqoyC2rK5oasom7eibkTDiTk5OfiPjl2bAlYVs9
        PI8BgiZKSkr+wMb1uWiKcrHC9lyJ2LfattSMjY09lPD14v8YKCsr0zXALLS3t/+E2E8WONnACw7B0/MY
        oHhpaendlZUV3Tro7+93gt9oCJ6euwiR+ntG4gMDAxx/8yLEVHAHkgFZ/D7EdachxNONxAlq1tbWuqW+
        vr58LApHoiAtFHFUvlCcPR8cHKS4lYXoCNrfcyn+BsviilkDOD7BtHsAcd2lGOJpVlZBvqcmtC+xsa2x
        sfEmeycKJtgAm5F3cXFRuBmx55jzFLe6Gb1ramq6SW2/cxy5I5E23dlgth1D3GFVnBrUoibbKkSmB5KE
        hIRnrGy1Cf7G5mOHeKAHEhc1yXFK5PP5eCTzGB3JOL5MtXIkozi234CPZNRSOnLaG2UoeHA0MeHr7Oz8
        saurq9TqAYQgJ7mV1Cu6pz8UE2NjYzyWL+iZ4HCEhYUdA2/0akYLcvFYTm61OHHmD8EAnBGvFhQU8GLy
        1qqICGxLDnA9BKf5xUQBAzc2Ni60tLQ0oPieswcBFJk/lm1wrfsbHI3kEokTwocEiwQXS2lqaiqqvr7+
        lsPh8EVERLwmuTYrck/9wvLl9DEup79NTExcU7i0/AqED9Wgc95w5+fnQ1F45VVVVX28ikdFRf2LOngF
        wSNe1bOyspYrKyvvuN1uXs/D2YYzhRzsiJb3I3alDwaCaWxSUL1hAAAAAElFTkSuQmCC
</value>
  </data>
</root>